// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model User {
//   id        Int      @id @default(autoincrement())
//   email     String   @unique
//   username  String   @unique
//   password  String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  username      String?   @unique
  password      String?
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone_no  String
  address_1 String
  address_2 String
  city      String
  state     State?   @relation(fields: [stateId], references: [id])
  stateId   Int?
  posCode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model State {
  id      Int       @id @default(autoincrement())
  name    String
  Company Company[]
}

model Rate {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  rateperhour String
  selected    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Table {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FoodBeverage {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  price      String
  Category   FnBCategory? @relation(fields: [CategoryId], references: [id])
  CategoryId Int?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model FnBCategory {
  id           Int            @id @default(autoincrement())
  name         String
  FoodBeverage FoodBeverage[]
}
